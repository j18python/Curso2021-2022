# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Khu6qlfpmwpGdh_vVT2C8eu3PiIfHaPv

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results
from rdflib.plugins.sparql import prepareQuery
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
ns = Namespace("http://somewhere#")
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)
q1 = prepareQuery(''' 
                    Select ?x
                    Where{ ?x rdfs:subClassOf ns:Person }
                    ''',
   initNs = { "ns": ns, "rdfs": RDFS}
)
for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results
for person,p,o in g.triples((None, RDF.type, ns.Person)):
  print(person)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)
q2 = prepareQuery(''' 
                    Select ?x
                    Where{
                      {
                        ?x rdf:type ns:Person
                      }UNION{
                        ?x rdfs:subClassOf ns:Person.
                        ?x rdf:type ?subClass
                      }
                    }
                        
                    ''',
   initNs = { "ns":ns, "rdfs":RDFS, "rdf":RDF}
)

for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# Visualize the results
for person,p,o in g.triples((None, RDF.type, ns.Person)):
  for person1,p1,o1 in g.triples((person, None, None)):
    print(person1,p1,o1)

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1,p1,o1 in g.triples((None, RDF.type, RDFS.subClassOf)):
    print(s1,p1,o1)
q3 = prepareQuery(''' 
                    Select ?x ?y ?z
                    Where{
                      {
                        ?x rdf:type ns:Person.
                        ?x ?y ?z
                      }UNION{
                        ?x rdf:type ?x1.
                        ?x ?y ?z.
                        ?x1 rdfs:subClassOf ns:Person.
                      }
                    }
                        
                    ''',
   initNs = { "ns":ns, "rdfs":RDFS, "rdf":RDF}
)
for r in g.query(q3):
  print(r)