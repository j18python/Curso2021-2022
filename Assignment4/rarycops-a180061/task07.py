# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tV5j-DRcpPtoJGoMj8v2DSqR_9wyXeiE

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/resources/example6.rdf", format="xml")

#RDFLib
for s, p, o in g.triplets((None, RDFS.subClassOf, ns.Person)):
    print(s)
    for s, p, o in g.triplets((None, RDFS.subClassOf, s)):
        print(s)

for s, p, o in g.triplets((None, RDFS.subClassOf, ns.Person)):
    for s, p, o in g.triplets((None, RDF.type, s)):
        print(s)
for s, p, o in g.triplets((None, RDF.type,ns.Person)):
    print(s)

for s, p, o in g.triplets((None, RDFS.subClassOf, ns.Person)):
    for s, p, o in g.triplets((None, RDF.type,s)):
        for s, p, o in g.triplets((s, None, None)):
            print(s,p,o)
for s, p, o in g.triplets((None, RDF.type,ns.Person)):
    for s, p, o in g.triplets((s, None, None)):
        print(s,p,o)

#SPARQL
from rdflib.plugins.sparql import prepareQuerry
q = prepareQuerry\
    ('''
    SELECT ?s 
    WHERE 
    {
        ?s rdfs:subClassOf* ns:Person
    }
    ''',
     initNs = {"ns":ns, "rdfs":RDFS}
     )
for res in g.querry(q):
    print(res.s)
q = prepareQuerry\
    ('''
    SELECT ?s 
    WHERE 
    {
        ?x rdfs:subClassOf* ns:Person.
        ?s rdf:type ?x
    }
    ''',
     initNs = {"ns":ns, "rdfs":RDFS, "rdf":RDF}
     )
for res in g.querry(q):
    print(res.s)
q = prepareQuerry\
    ('''
    SELECT ?s 
    WHERE 
    {
        ?x rdfs:subClassOf* ns:Person.
        ?s rdf:type ?x.
        ?s ?p ?o
    }
    ''',
     initNs = {"ns":ns, "rdfs":RDFS, "rdf":RDF}
     )
for res in g.querry(q):
    print(res.s, res.p, res.o)