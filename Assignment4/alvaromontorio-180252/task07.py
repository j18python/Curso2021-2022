# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tV5j-DRcpPtoJGoMj8v2DSqR_9wyXeiE

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2020-2021/master/Assignment4"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/resources/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""
####### RDFLib #######
ns = Namespace("http://somewhere#")
print("Resultado de 7.1 en RDFLib:")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

####### SPARQL #######

from rdflib.plugins.sparql import prepareQuery

q = prepareQuery("""
SELECT ?s WHERE {
?s rdfs:subClassOf ns:Person
}
""", initNs = {"ns": ns })
print("Resultado de 7.1 en SPARQL:")
for elem in g.query(q):
    print(elem, " -> ", elem[0])
print()
"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**"""
####### RDFLib #######
print("Resultado de 7.2 en RDFLib:")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
    print(s)
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for sub, a, b in g.triples((None, RDF.type, s)):
        print(sub)

####### SPARQL #######


print("Resultado de 7.2 en SPARQL:")
from rdflib.plugins.sparql import prepareQuery

q = prepareQuery("""
SELECT ?s WHERE {
{?s rdf:type ns:Person.}
UNION
{?sub rdfs:subClassOf ns:Person.
?s rdf:type ?sub.}

}
""", initNs = {"ns": ns })
for elem in g.query(q):
    print(elem, " -> ", elem[0])
print()


"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**"""
####### RDFLib #######

print("Resultado de 7.3 en RDFLib:")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
    for s2, p2, o2 in g.triples((s, None, None)):
        print(s2, p2, o2)

for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
    for s2, p2, o2 in g.triples((None, RDF.type, s)):
        for s3, p3, o3 in g.triples((s2, None, None)):
            print(s3, p3, o3)

####### SPARQL #######

print("Resultado de 7.3 en SPARQL:")
q = prepareQuery("""
  SELECT 
    ?s ?p ?o
  WHERE { 
    { ?s rdf:type ns:Person.
    ?s ?p ?o.}
    UNION
    {   ?x rdfs:subClassOf ns:Person.
        ?s rdf:type ?x.
        ?s ?p ?o}
  }
  """,
  initNs = {"ns": ns}
)

for elem in g.query(q):
  print(elem)