# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l31YvS2paIH10U1Czhs_qA9s1AB2q8gs

#**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s,p,o)

q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdfs:subClassOf ns:Person. 
  }
  ''',

  initNs = { "ns": ns}
)

for r in g.query(q1):
  print(r)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

from rdflib.plugins.sparql import prepareQuery

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s,p,o in g.triples((None, RDF.type, s)):
    print(s)
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)

q2 = prepareQuery('''
  SELECT ?Subject WHERE {
    ?x rdfs:subClassOf* ns:Person.
    ?Subject rdf:type ?x.

  }
  ''',

  initNs = {"rdfs": RDFS, "ns": ns, "rdf": RDF}
)

for r in g.query(q2):
  print(r)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

from rdflib.plugins.sparql import prepareQuery

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s,p,o in g.triples((None, RDF.type, s)):
    for s,p,o in g.triples((s, None, None)):
      print (s,p,o)

for s,p,o in g.triples((None, RDF.type, ns.Person)):
  for s,p,o in g.triples((s, None, None)):
    print (s,p,o)

q3 = prepareQuery('''
  SELECT ?Subject ?prop ?obj WHERE { 
    ?x rdf:subClassOf* ns:Person.
    ?Subject rdf:type ?x.
    ?Subject ?prop ?obj
  }
  ''',

  initNs = {"rdfs": RDFS, "ns": ns, "rdf": RDF}
)

for r in g.query(q3):
  print(r)