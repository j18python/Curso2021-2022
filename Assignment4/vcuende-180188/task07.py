# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Oxpxs_IQi6xHcWEmRl-eJOSzUUKWGni5

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery

NS = Namespace("http://somewhere#")

q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdfs:subClassOf ns:Person. 
  }
  ''',
  initNs = { "ns": NS}
)

print("RDFLib")
for s,p,o in g.triples((None, RDFS.subClassOf, NS.Person)):
  print(s)

print("\n")

print("SPARQL")
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

from rdflib.plugins.sparql import prepareQuery

NS = Namespace("http://somewhere#")

q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    {?Subject rdf:type ns:Person}
    UNION
    {?x rdfs:subClassOf ns:Person.
      ?Subject rdf:type ?x}
  }
  ''',
  initNs = { "ns": NS}
)

print("RDFLib")
for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s2,p2,o2 in g.triples((None, RDF.type, s)):
    print(s2)

print("\n")

print("SPARQL")
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

from rdflib.plugins.sparql import prepareQuery

NS = Namespace("http://somewhere#")
 
q1 = prepareQuery('''
  SELECT ?Subject ?Properties WHERE { 
    {?Subject rdf:type ns:Person.
      ?Subject ?Properties ?Object} 
    UNION 
    {?Subject rdf:type ?x.
      ?Subject ?Properties ?Object.
      ?x rdfs:subClassOf ns:Person}
  }
  ''',
  initNs = { "ns": NS}
)

print("RDFLib")
for s,p,o in g.triples((None, RDF.type, NS.Person)):
  for s2,p2,o2 in g.triples((s, None, None)):
    print(s2, p2)
for s,p,o in g.triples((None, RDFS.subClassOf, NS.Person)):
  for s2,p2,o2 in g.triples((None, RDF.type, s)):
    for s3,p3,o3 in g.triples((s2, None, None)):
      print(s3, p3)

print("\n")

print("SPARQL")
for r in g.query(q1):
  print(r.Subject, r.Properties)