# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pgg3XM-7JW2jtyASOlkUfXvtyeldXs00

**Task 07: Querying RDF(s)**
"""

!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery

ns = Namespace("http://somewhere#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

print("RDFLib --> ")
for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s,p,o)

query1 = prepareQuery('''
  SELECT ?subcl 
  WHERE {
    ?subcl rdfs:subClassOf ns:Person.
  }
  ''',
  initNs = {"rdfs":RDFS, "ns":ns}
)

print("SPARQL --> ")
for res in g.query(query1):
  print(res)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

from rdflib.plugins.sparql import prepareQuery

print("RDFLib --> ")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
  print(s)

for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1, p1, o1 in g.triples((None, RDF.type, s)):
    print(s1)


query2 = prepareQuery('''
  SELECT ?indiv 
  WHERE {
    {
      ?indiv rdf:type ns:Person.
    }
    UNION
    {
      ?subcl rdfs:subClassOf ns:Person.
      ?indiv rdf:type ?subcl
    }
  }
  ''',
  initNs = {"rdfs":RDFS, "rdf":RDF, "ns":ns}
)

print("SPARQL --> ")
for res in g.query(query2):
  print(res)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

from rdflib.plugins.sparql import prepareQuery

print("RDFLib --> ")
for s, p, o in g.triples((None, RDF.type, ns.Person)):
  for s1, p1, o1 in g.triples((s, None, None)):
    print(s1,p1,o1)

for s, p, o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for s1, p1, o1 in g.triples((None, RDF.type, s)):
    for s2, p2, o2 in g.triples((s1, None, None)):
      print(s2,p2,o2)


query3 = prepareQuery('''
  SELECT ?indiv ?prop ?class
  WHERE {
    {
      ?indiv rdf:type ns:Person.
      ?indiv ?prop ?class
    }
    UNION
    {
      ?indiv rdf:type ?s.
      ?indiv ?prop ?class.
      ?s rdfs:subClassOf ns:Person
    }
  }
  ''',
  initNs = {"rdfs":RDFS, "rdf":RDF, "ns":ns}
)

print("SPARQL --> ")
for res in g.query(query3):
  print(res)