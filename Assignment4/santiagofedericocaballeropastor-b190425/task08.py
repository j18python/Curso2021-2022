# -*- coding: utf-8 -*-
#"""Task08.ipynb

#Automatically generated by Colaboratory.

#Original file is located at
#    https://colab.research.google.com/drive/1r-vkCj6Q_33Q-C-OeUBWYNuKoDlLuHaq

#**Task 08: Completing missing data**
#"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

#"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""


from rdflib.plugins.sparql import prepareQuery
from rdflib.namespace import RDF, RDFS
ns=Namespace("http://data.org#")
q1 = prepareQuery('''
  SELECT ?Subject ?p WHERE { 
    ?Subject ?p ns:Person .
  }
  ''',
  initNs = { "rdfs": RDFS,"ns":ns}
)
q2 = prepareQuery('''
  SELECT ?Subject ?p ?z  WHERE { 
    {?Subject rdf:type ns:Person .
    ?Subject ?p ?z.}
    UNION
    {?Subject rdfs:subClassOf ns:Person.
    ?Subject ?p ?z.
    }
  }
  ''',
  initNs = { "rdf":RDF,"rdfs": RDFS,"ns":ns}
)
print("Grafo 2")
for t in g2.query(q2):
  print(t)
print("-------------------------------------------------")
print("Grafo 1")
print("-------------------------------------------------")
for r in g1.query(q1):
  print(r)
for r in g1.query(q1):
  for t in g2.query(q2):
    if t.Subject==r.Subject:
      g1.add((t))
print("-------------------------------------------------")
print("Grafo 1 despues de agrgar contenido")
print("-------------------------------------------------")
for r in g1.query(q2):
  print(r)